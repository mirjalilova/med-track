// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: genetic_data.proto

package health_sync

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GeneticData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DataType     string `protobuf:"bytes,3,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	DataValue    string `protobuf:"bytes,4,opt,name=data_value,json=dataValue,proto3" json:"data_value,omitempty"`
	AnalysisDate string `protobuf:"bytes,5,opt,name=analysis_date,json=analysisDate,proto3" json:"analysis_date,omitempty"`
	DoctorId     string `protobuf:"bytes,6,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	CreatedAt    string `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    string `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt    int32  `protobuf:"varint,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *GeneticData) Reset() {
	*x = GeneticData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genetic_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneticData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneticData) ProtoMessage() {}

func (x *GeneticData) ProtoReflect() protoreflect.Message {
	mi := &file_genetic_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneticData.ProtoReflect.Descriptor instead.
func (*GeneticData) Descriptor() ([]byte, []int) {
	return file_genetic_data_proto_rawDescGZIP(), []int{0}
}

func (x *GeneticData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GeneticData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GeneticData) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *GeneticData) GetDataValue() string {
	if x != nil {
		return x.DataValue
	}
	return ""
}

func (x *GeneticData) GetAnalysisDate() string {
	if x != nil {
		return x.AnalysisDate
	}
	return ""
}

func (x *GeneticData) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *GeneticData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GeneticData) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GeneticData) GetDeletedAt() int32 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type GeneticDataCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DataType     string `protobuf:"bytes,2,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	DataValue    string `protobuf:"bytes,3,opt,name=data_value,json=dataValue,proto3" json:"data_value,omitempty"`
	AnalysisDate string `protobuf:"bytes,4,opt,name=analysis_date,json=analysisDate,proto3" json:"analysis_date,omitempty"`
	DoctorId     string `protobuf:"bytes,5,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
}

func (x *GeneticDataCreate) Reset() {
	*x = GeneticDataCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genetic_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneticDataCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneticDataCreate) ProtoMessage() {}

func (x *GeneticDataCreate) ProtoReflect() protoreflect.Message {
	mi := &file_genetic_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneticDataCreate.ProtoReflect.Descriptor instead.
func (*GeneticDataCreate) Descriptor() ([]byte, []int) {
	return file_genetic_data_proto_rawDescGZIP(), []int{1}
}

func (x *GeneticDataCreate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GeneticDataCreate) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *GeneticDataCreate) GetDataValue() string {
	if x != nil {
		return x.DataValue
	}
	return ""
}

func (x *GeneticDataCreate) GetAnalysisDate() string {
	if x != nil {
		return x.AnalysisDate
	}
	return ""
}

func (x *GeneticDataCreate) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

type GeneticDataUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataType     string `protobuf:"bytes,1,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	DataValue    string `protobuf:"bytes,2,opt,name=data_value,json=dataValue,proto3" json:"data_value,omitempty"`
	AnalysisDate string `protobuf:"bytes,3,opt,name=analysis_date,json=analysisDate,proto3" json:"analysis_date,omitempty"`
	DoctorId     string `protobuf:"bytes,4,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	Id           string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GeneticDataUpdate) Reset() {
	*x = GeneticDataUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genetic_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneticDataUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneticDataUpdate) ProtoMessage() {}

func (x *GeneticDataUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_genetic_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneticDataUpdate.ProtoReflect.Descriptor instead.
func (*GeneticDataUpdate) Descriptor() ([]byte, []int) {
	return file_genetic_data_proto_rawDescGZIP(), []int{2}
}

func (x *GeneticDataUpdate) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *GeneticDataUpdate) GetDataValue() string {
	if x != nil {
		return x.DataValue
	}
	return ""
}

func (x *GeneticDataUpdate) GetAnalysisDate() string {
	if x != nil {
		return x.AnalysisDate
	}
	return ""
}

func (x *GeneticDataUpdate) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *GeneticDataUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GeneticDataRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DataType     string `protobuf:"bytes,3,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	DataValue    string `protobuf:"bytes,4,opt,name=data_value,json=dataValue,proto3" json:"data_value,omitempty"`
	AnalysisDate string `protobuf:"bytes,5,opt,name=analysis_date,json=analysisDate,proto3" json:"analysis_date,omitempty"`
}

func (x *GeneticDataRes) Reset() {
	*x = GeneticDataRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genetic_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneticDataRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneticDataRes) ProtoMessage() {}

func (x *GeneticDataRes) ProtoReflect() protoreflect.Message {
	mi := &file_genetic_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneticDataRes.ProtoReflect.Descriptor instead.
func (*GeneticDataRes) Descriptor() ([]byte, []int) {
	return file_genetic_data_proto_rawDescGZIP(), []int{3}
}

func (x *GeneticDataRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GeneticDataRes) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GeneticDataRes) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *GeneticDataRes) GetDataValue() string {
	if x != nil {
		return x.DataValue
	}
	return ""
}

func (x *GeneticDataRes) GetAnalysisDate() string {
	if x != nil {
		return x.AnalysisDate
	}
	return ""
}

type GetAllGeneticDateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AnalysisDate string  `protobuf:"bytes,2,opt,name=analysis_date,json=analysisDate,proto3" json:"analysis_date,omitempty"`
	DoctorId     string  `protobuf:"bytes,3,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	Filter       *Filter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetAllGeneticDateReq) Reset() {
	*x = GetAllGeneticDateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genetic_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGeneticDateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGeneticDateReq) ProtoMessage() {}

func (x *GetAllGeneticDateReq) ProtoReflect() protoreflect.Message {
	mi := &file_genetic_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGeneticDateReq.ProtoReflect.Descriptor instead.
func (*GetAllGeneticDateReq) Descriptor() ([]byte, []int) {
	return file_genetic_data_proto_rawDescGZIP(), []int{4}
}

func (x *GetAllGeneticDateReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetAllGeneticDateReq) GetAnalysisDate() string {
	if x != nil {
		return x.AnalysisDate
	}
	return ""
}

func (x *GetAllGeneticDateReq) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *GetAllGeneticDateReq) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetAllGeneticDateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneticDatas []*GeneticDataRes `protobuf:"bytes,1,rep,name=GeneticDatas,proto3" json:"GeneticDatas,omitempty"`
	Count        int32             `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllGeneticDateRes) Reset() {
	*x = GetAllGeneticDateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genetic_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllGeneticDateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGeneticDateRes) ProtoMessage() {}

func (x *GetAllGeneticDateRes) ProtoReflect() protoreflect.Message {
	mi := &file_genetic_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGeneticDateRes.ProtoReflect.Descriptor instead.
func (*GetAllGeneticDateRes) Descriptor() ([]byte, []int) {
	return file_genetic_data_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllGeneticDateRes) GetGeneticDatas() []*GeneticDataRes {
	if x != nil {
		return x.GeneticDatas
	}
	return nil
}

func (x *GetAllGeneticDateRes) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_genetic_data_proto protoreflect.FileDescriptor

var file_genetic_data_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e,
	0x63, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x91, 0x02, 0x0a, 0x0b, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x22, 0xa1, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x44, 0x61, 0x74,
	0x65, 0x22, 0x9e, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x65,
	0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73,
	0x79, 0x6e, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x22, 0x6d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x65,
	0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x47, 0x65,
	0x6e, 0x65, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x52, 0x0c, 0x47,
	0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x32, 0xd3, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x1a, 0x11, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x1e, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x1a, 0x11, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e,
	0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x14, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f,
	0x73, 0x79, 0x6e, 0x63, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x14, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x1b, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x21, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x21, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x16, 0x5a, 0x14, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_genetic_data_proto_rawDescOnce sync.Once
	file_genetic_data_proto_rawDescData = file_genetic_data_proto_rawDesc
)

func file_genetic_data_proto_rawDescGZIP() []byte {
	file_genetic_data_proto_rawDescOnce.Do(func() {
		file_genetic_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_genetic_data_proto_rawDescData)
	})
	return file_genetic_data_proto_rawDescData
}

var file_genetic_data_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_genetic_data_proto_goTypes = []any{
	(*GeneticData)(nil),          // 0: health_sync.GeneticData
	(*GeneticDataCreate)(nil),    // 1: health_sync.GeneticDataCreate
	(*GeneticDataUpdate)(nil),    // 2: health_sync.GeneticDataUpdate
	(*GeneticDataRes)(nil),       // 3: health_sync.GeneticDataRes
	(*GetAllGeneticDateReq)(nil), // 4: health_sync.GetAllGeneticDateReq
	(*GetAllGeneticDateRes)(nil), // 5: health_sync.GetAllGeneticDateRes
	(*Filter)(nil),               // 6: health_sync.Filter
	(*GetById)(nil),              // 7: health_sync.GetById
	(*Void)(nil),                 // 8: health_sync.Void
}
var file_genetic_data_proto_depIdxs = []int32{
	6, // 0: health_sync.GetAllGeneticDateReq.filter:type_name -> health_sync.Filter
	3, // 1: health_sync.GetAllGeneticDateRes.GeneticDatas:type_name -> health_sync.GeneticDataRes
	1, // 2: health_sync.GeneticDataService.Create:input_type -> health_sync.GeneticDataCreate
	2, // 3: health_sync.GeneticDataService.Update:input_type -> health_sync.GeneticDataUpdate
	7, // 4: health_sync.GeneticDataService.Delete:input_type -> health_sync.GetById
	7, // 5: health_sync.GeneticDataService.Get:input_type -> health_sync.GetById
	4, // 6: health_sync.GeneticDataService.List:input_type -> health_sync.GetAllGeneticDateReq
	8, // 7: health_sync.GeneticDataService.Create:output_type -> health_sync.Void
	8, // 8: health_sync.GeneticDataService.Update:output_type -> health_sync.Void
	8, // 9: health_sync.GeneticDataService.Delete:output_type -> health_sync.Void
	3, // 10: health_sync.GeneticDataService.Get:output_type -> health_sync.GeneticDataRes
	5, // 11: health_sync.GeneticDataService.List:output_type -> health_sync.GetAllGeneticDateRes
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_genetic_data_proto_init() }
func file_genetic_data_proto_init() {
	if File_genetic_data_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_genetic_data_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GeneticData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_genetic_data_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GeneticDataCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_genetic_data_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GeneticDataUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_genetic_data_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GeneticDataRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_genetic_data_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllGeneticDateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_genetic_data_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllGeneticDateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_genetic_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_genetic_data_proto_goTypes,
		DependencyIndexes: file_genetic_data_proto_depIdxs,
		MessageInfos:      file_genetic_data_proto_msgTypes,
	}.Build()
	File_genetic_data_proto = out.File
	file_genetic_data_proto_rawDesc = nil
	file_genetic_data_proto_goTypes = nil
	file_genetic_data_proto_depIdxs = nil
}
